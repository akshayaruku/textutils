{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","style","backgroundColor","color","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","About","myStyle","class","href","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","devtools","toString","setInterval","console","profile","profileEnd","body","anonymous","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.17b7be0e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n       <>\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n        <input className= \"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id= \"flexSwitchCheckDefault\" />\r\n        <label className= \"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode </label>\r\n        </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n       </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n\r\n    const handleLowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\",\"success\");\r\n    }\r\n\r\n    \r\n    const handleCopy = ()=>{\r\n        let text = document.getElementById(\"myBox\");\r\n       text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n       props.showAlert(\"Copied to Clipboard\",\"success\");\r\n    }\r\n\r\n    \r\n\r\n    const handleclearClick = ()=>{\r\n      \r\n        setText('')\r\n        props.showAlert(\"Cleared Text \",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n       \r\n    }\r\n    const [text, setText] = useState(\"Enter the Text\");\r\n    return (\r\n        <>\r\n       \r\n    <div className=\"container mb-3\"  >\r\n        <h2>{props.heading}</h2>\r\n       \r\n        \r\n        {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n         <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'light'?'white':'#4d398987',color: props.mode === 'light'?'black':'white'}}id=\"myBox\"  rows=\"6\"></textarea>\r\n         \r\n         <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark'?'info':'dark'} mx-2 my-2`} onClick={handleUpClick}>Convert To UPPER CASE</button>\r\n         <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark'?'info':'dark'} mx-1`} onClick={handleLowClick}>Convert To lower case</button>\r\n         <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark'?'info':'dark'} mx-1`} onClick={handleclearClick}>Clear Text</button>\r\n         <button disabled={text.length===0} className={`btn btn-${props.mode === 'dark'?'info':'dark'} mx-1 my-1`} onClick={handleCopy}>Copy Text</button>\r\n    </div>\r\n    <div className=\"container mb-3\">\r\n        <h3>Summary</h3>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        {/* <p>Total words {text.split(\" \").filter((element)=>{return element.length!==0}).length} and {text.length} Characters</p> */}\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes required to read </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something in Textbox to preview\"}</p>\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function About(props) {\r\n//   const [myStyle, setmyStyle] = useState({\r\n//     color: 'black',\r\n//     backgroundColor: 'white'\r\n// })\r\nlet myStyle={\r\n  color: props.mode === 'dark'?'white':'black',\r\n  backgroundColor: props.mode === 'dark'?'black':'white'\r\n  \r\n}\r\n\r\n\r\n    return (\r\n       <>\r\n       \r\n      \r\n       <h1 className = \"container \" style={myStyle}>About us</h1>\r\n       <div className=\"container\"  style={myStyle} >\r\n       <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n      <strong>Analyze Your Text</strong> \r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\"  style={myStyle}>\r\n        Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" >\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\"  style={myStyle} >\r\n      <button className=\"accordion-button collapsed\"  style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n      <strong>Free to use</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\"  style={myStyle}>\r\n         TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\"  style={myStyle}>\r\n      <button className=\"accordion-button collapsed\" type=\"button\"  style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n      <strong>Browser Compatible</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\"  style={myStyle}>\r\n         This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n      </div>\r\n    </div>\r\n  </div> \r\n</div>\r\n<div className=\"container my-3\">\r\n{/* <button type=\"button\" onClick={toggleStyle} class=\"btn btn-primary\">{btnText}</button> */}\r\n\r\n</div>\r\n</div>\r\n<div className=\"container\" >\r\n  <div class=\"card text-center\">\r\n  <div class=\"card-header\"  style={myStyle}>\r\n    Contributed By Akshay Aruku\r\n  </div>\r\n  <div class=\"card-body\"  style={myStyle}>\r\n    <h5 class=\"card-title\"  style={myStyle}>Visit Akshay's Github</h5>\r\n    <p class=\"card-text\"  style={myStyle}>This is completely react based web app</p>\r\n    <a href=\"#\" class=\"btn btn-primary\" href=\"https://github.com/akshayaruku\">visit now</a>\r\n  </div>\r\n  <div class=\"card-footer text-muted\"  style={myStyle}>\r\n    Few moments ago\r\n  </div>\r\n</div>\r\n</div>\r\n       </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        }\r\n    return (\r\n     \r\n            \r\n       <div style={{height: '70px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        {/* <strong>Holy guacamole!</strong> You should check in on some of those fields below. */}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>}\r\n        </div>\r\n       \r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React,{useState} from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message, type ) =>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  // To Call debugger \n  function anonymous() {\n    \n    }\n// To Call debugger when the dev tool is open\n    var devtools = function() {};\n    devtools.toString = function() {\n      debugger\n        return '-'\n    }\n\n    setInterval(()=>{\n        console.profile(devtools)\n        console.profileEnd(devtools)\n    }, 1000)\n    // Here ends the function\n\n  const toggleMode = ()=>{\n    \n    \n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has enabled\",\"success\");\n      document.title='TextUtils - Dark Mode';\n     // toggleStyle('black');\n    }\n    else{ \n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    document.body.style.color = 'black';\n    showAlert(\"Light mode has enabled\",\"success\");\n    document.title ='TextUtils - Light Mode';\n    }\n  }\n\n  \n\n// const toggleStyle = (coo) => {\n//   if(coo==='black'){\n//       setmyStyle({\n//           color: 'black',\n//           backgroundColor: 'black',\n//           border: '1px solid white'\n//       })\n     \n//   }\n//   else{\n//       setmyStyle({\n//           color: 'black',\n//           backgroundColor: 'white'\n//       })\n      \n\n\n//   }\n// }\n\n  return(\n  <>\n  <Router>\n<Navbar title =\"TextUtils\" mode={mode} toggleMode={toggleMode} anonymous={anonymous} />\n<Alert alert={alert}/>\n<Switch>\n          <Route exact path=\"/about\"  >\n            <About mode={mode} />\n            \n          </Route>\n         \n          <Route exact path=\"/\">\n          <TextForm heading = \"Enter the Text to Analyze\" showAlert={showAlert} mode={mode}/>\n          </Route>\n   </Switch>\n   </Router>\n<div className=\"my-3\"></div>\n<div className=\"container\">\n  <div className=\"my-3\"></div>\n\n\n{/* <About/> */}\n\n</div>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}